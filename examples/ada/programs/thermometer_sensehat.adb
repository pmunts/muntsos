-- Raspberry Pi Sense HAT Internet Thermometer Example Program

-- Copyright (C)2018-2025, Philip Munts dba Munts Technologies.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are met:
--
-- * Redistributions of source code must retain the above copyright notice,
--   this list of conditions and the following disclaimer.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-- AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-- IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-- ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-- LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-- CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-- SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-- INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-- CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-- ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-- POSSIBILITY OF SUCH DAMAGE.

-- NOTE: The temperature reading will be significantly higher than the actual
-- ambient temperature because of heat generated by the CPU board.

PRAGMA Warnings(Off, """error"" modified by call, but value overwritten");

WITH Ada.Calendar.Formatting;
WITH Ada.Strings.Fixed;
WITH libLinux;
WITH Humidity;
WITH Pressure;
WITH Temperature;
WITH Watchdog.libsimpleio;
WITH Webserver.HashTable;

WITH SenseHAT.Display;
WITH SenseHAT.Sensors;

USE TYPE Humidity.Relative;
USE TYPE Pressure.Pascals;
USE TYPE Temperature.Celsius;

USE Humidity.Relative_IO;
USE Pressure.Pascals_IO;
USE Temperature.Celsius_IO;

PROCEDURE thermometer_sensehat IS

  newline : CONSTANT String := ASCII.CR & ASCII.LF;
  refresh : CONSTANT String := "<META HTTP-EQUIV='Refresh' CONTENT=5>" & newline;
  title   : CONSTANT String := "<h1>Ada Internet of Things Thermometer</h1>" &
    newline & "<h2>Using the Raspberry Pi Sense HAT</h2>";
  wd      : Watchdog.Timer;
  error   : Integer;
  T1      : Temperature.Celsius;  -- From HTS221 humidity sensor
  H1      : Humidity.Relative;    -- From HTS221 humidity sensor
  T2      : Temperature.Celsius;  -- From LPS25 pressure sensor
  P2      : Pressure.Pascals;     -- From LPS25 pressure sensor
  T3      : Temperature.Celsius;  -- From LSM9DS1 motion sensor
  outbuf1 : String(1 .. 20);
  outbuf2 : String(1 .. 20);
  outbuf3 : String(1 .. 20);
  outbuf4 : String(1 .. 20);
  outbuf5 : String(1 .. 20);

BEGIN
  SenseHAT.Display.Display.Clear;

  DELAY 5.0;

  wd := Watchdog.libsimpleio.Create;
  wd.SetTimeout(5.0);

  libLinux.Detach(error);

  Webserver.HashTable.Publish("/", title);
  Webserver.HashTable.Start;

  libLinux.DropPrivileges("nobody" & ASCII.NUL, error);

  LOOP
    -- Sample sensors

    T1 := SenseHAT.Sensors.Humidity.Get;
    H1 := SenseHAT.Sensors.Humidity.Get;
    T2 := SenseHAT.Sensors.Pressure.Get;
    P2 := SenseHAT.Sensors.Pressure.Get/100.0;
    T3 := SenseHAT.Sensors.Motion.Get;

    -- Convert sampled values to strings

    Put(outbuf1, T1, 1, 0);
    Put(outbuf2, H1, 1, 0);
    Put(outbuf3, T2, 1, 0);
    Put(outbuf4, P2, 1, 0);
    Put(outbuf5, T3, 1, 0);

    -- Publish sensor data to web page

    Webserver.HashTable.Publish("/", refresh & title                                               & newline &
      "<table cellspacing='20'>"                                                                   & newline &
      "  <tr>"                                                                                     & newline &
      "    <td>Time:</td>"                                                                         & newline &
      "    <td colspan='2'>" & Ada.Calendar.Formatting.Image(Ada.Calendar.Clock) & " UTC</td>"     & newline &
      "  </tr>"                                                                                    & newline &
      "  <tr>"                                                                                     & newline &
      "    <td>HTS221:</td>"                                                                       & newline &
      "    <td>" & Ada.Strings.Fixed.Trim(outbuf1, Ada.Strings.Left) & " &deg;C</td>"              & newline &
      "    <td>" & Ada.Strings.Fixed.Trim(outbuf2, Ada.Strings.Left) & " % RH</td>"                & newline &
      "  </tr>"                                                                                    & newline &
      "  <tr>"                                                                                     & newline &
      "    <td>LPS25:</td>"                                                                        & newline &
      "    <td>" & Ada.Strings.Fixed.Trim(outbuf3, Ada.Strings.Left) & " &deg;C</td>"              & newline &
      "    <td>" & Ada.Strings.Fixed.Trim(outbuf4, Ada.Strings.Left) & " hPA</td>"                 & newline &
      "  </tr>"                                                                                    & newline &
      "  <tr>"                                                                                     & newline &
      "    <td>LSM9DS1:</td>"                                                                      & newline &
      "    <td>" & Ada.Strings.Fixed.Trim(outbuf5, Ada.Strings.Left) & " &deg;C</td>"              & newline &
      "  </tr>"                                                                                    & newline &
      "<table>"                                                                                    & newline);

    DELAY 1.0;

    wd.Kick;
  END LOOP;
END thermometer_sensehat;
